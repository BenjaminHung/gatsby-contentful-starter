{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/container.js","webpack:///./src/components/navigation.js","webpack:///./src/components/layout.js"],"names":["richTextOptions","renderNode","_renderNode","BLOCKS","EMBEDDED_ASSET","node","_node$data$target$fie","data","target","fields","title","description","file","mimeType","contentType","split","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","alt","src","url","href","details","fileName","style","backgroundColor","color","BlogPostTemplate","render","post","get","this","props","siteTitle","_components_layout__WEBPACK_IMPORTED_MODULE_6__","location","background","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","className","heroStyles","hero","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","heroImage","fluid","display","publishDate","documentToReactComponents","JSON","parse","body","React","Component","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","container","children","react_default","maxWidth","margin","navigation","role","styles","navigationItem","gatsby_browser_entry","to","Template","_this$props","__PREFIX_PATHS__","__PATH_PREFIX__"],"mappings":"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","file":"component---src-templates-blog-post-js-a18244f41acaeb20e7ae.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport Img from 'gatsby-image'\nimport Layout from '../components/layout'\n\nimport heroStyles from '../components/hero.module.css'\nimport { BLOCKS, MARKS, INLINES } from '@contentful/rich-text-types';\nimport { documentToReactComponents } from '@contentful/rich-text-react-renderer';\nimport { renderToStaticMarkup } from 'react-dom/server'\n\nfunction renderMedia(file) {\n  if (file.contentType === 'video/mp4') {\n    return (\n      <div className='embed-responsive embed-responsive-16by9' style={vidStyle}>\n        <video controls>\n          <source src={file.url} type='video/mp4'/>\n          <p>Your browser doesnt support HTML5 video.</p>\n        </video>\n      </div>\n    )\n  } else if (file.contentType === 'image/jpeg') {\n    return (<img class=\"img-fluid\" src={file.url} />)\n  } else {\n    return (<p>Unknown content type</p>)\n  }\n}\n\nconst richTextOptions = {\n  renderNode: {\n    [BLOCKS.EMBEDDED_ASSET]: (node) => {\n      const { title, description, file } = node.data.target.fields;\n      const mimeType = file['en-US'].contentType\n      const mimeGroup = mimeType.split('/')[0]\n      switch (mimeGroup) {\n        case 'image':\n          return <img\n            title={ title ? title['en-US'] : null}\n            alt={description ?  description['en-US'] : null}\n            src={file['en-US'].url}\n          />\n        case 'application':\n          return <a\n            alt={description ?  description['en-US'] : null}\n            href={file['en-US'].url}\n            >{ title ? title['en-US'] : file['en-US'].details.fileName }\n          </a>\n        default:\n          return <span style={{backgroundColor: 'red', color: 'white'}}> {mimeType} embedded asset </span>\n      }\n      \n    },\n  }\n}\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = get(this.props, 'data.contentfulBlogPost')\n    const siteTitle = get(this.props, 'data.site.siteMetadata.title')\n    const options = { renderNode: { 'embedded-asset-block': (node) => { \n        let file = node.data.target.fields.file\n        let jsx = renderMedia(file)\n        let markup = renderToStaticMarkup(jsx)\n        return markup\n    }}}     \n\n    return (\n      <Layout location={this.props.location} >\n        <div style={{ background: '#fff' }}>\n          <Helmet title={`${post.title} | ${siteTitle}`} />\n          <div className={heroStyles.hero}>\n            <Img className={heroStyles.heroImage} alt={post.title} fluid={post.heroImage.fluid} />\n          </div>\n          <div className=\"wrapper\">\n            <h1 className=\"section-headline\">{post.title}</h1>\n            <p\n              style={{\n                display: 'block',\n              }}\n            >\n              {post.publishDate}\n            </p>\n            <div>\n            {documentToReactComponents(JSON.parse(post.body.body),richTextOptions)}\n            </div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    contentfulBlogPost(slug: { eq: $slug }) {\n      title\n      publishDate(formatString: \"MMMM Do, YYYY\")\n      heroImage {\n        fluid(maxWidth: 1180, background: \"rgb:000000\") {\n          ...GatsbyContentfulFluid_tracedSVG\n        }\n      }\n      body {\n        body\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\n\nexport default ({ children }) => (\n  <div style={{ maxWidth: 1180, margin: '0 auto' }}>{children}</div>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styles from './navigation.module.css'\n\nexport default () => (\n  <nav role=\"navigation\">\n    <ul className={styles.navigation}>\n      <li className={styles.navigationItem}>\n        <Link to=\"/\">Markham Chinese Alliance Church - 麥咸華人宣道會</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/em/\">English Ministry</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/cm/\">粵語事工</Link>\n      </li>\n      <li className={styles.navigationItem}>\n        <Link to=\"/mm/\">國語事工</Link>\n      </li>\n    </ul>\n  </nav>\n)\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport base from './base.css'\nimport Container from './container'\nimport Navigation from './navigation'\n\nclass Template extends React.Component {\n  render() {\n    const { location, children } = this.props\n    let header\n\n    let rootPath = `/`\n    if (typeof __PREFIX_PATHS__ !== `undefined` && __PREFIX_PATHS__) {\n      rootPath = __PATH_PREFIX__ + `/`\n    }\n\n    return (\n      <Container>\n        <Navigation />\n        {children}\n      </Container>\n    )\n  }\n}\n\nexport default Template\n"],"sourceRoot":""}